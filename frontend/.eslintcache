[{"C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\index.js":"1","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\App.js":"2","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Footer.js":"3","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Header.js":"4","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Main.js":"5","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Formulario.js":"6","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Invitados.js":"7","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Invitado.js":"8","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Menu.js":"9","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Historia.js":"10","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\HistoriaAntigua.js":"11"},{"size":198,"mtime":1611517704119,"results":"12","hashOfConfig":"13"},{"size":1859,"mtime":1611843033014,"results":"14","hashOfConfig":"13"},{"size":189,"mtime":1611520066710,"results":"15","hashOfConfig":"13"},{"size":653,"mtime":1611840619883,"results":"16","hashOfConfig":"13"},{"size":6904,"mtime":1611835723119,"results":"17","hashOfConfig":"13"},{"size":1712,"mtime":1611750111176,"results":"18","hashOfConfig":"13"},{"size":1230,"mtime":1611752227504,"results":"19","hashOfConfig":"13"},{"size":1597,"mtime":1611620161780,"results":"20","hashOfConfig":"13"},{"size":635,"mtime":1611784320344,"results":"21","hashOfConfig":"13"},{"size":414,"mtime":1611784871625,"results":"22","hashOfConfig":"13"},{"size":527,"mtime":1611842950228,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1g6h6tq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\index.js",[],["49","50"],"C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\App.js",[],"C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Footer.js",[],"C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Header.js",[],"C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Main.js",["51"],"//rcc Va a ser el contenedor del contenido principal y va a ser un componente de clase ahora funcional\r\n//padre que actua como interlocutor de formulario e invitados\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Formulario } from './Formulario'\r\nimport { Invitados } from './Invitados'\r\n// Funcionamiento: Hay un padre que es el main con un estado que tiene dos propiedades\r\n// invitados que es un array de objetos y nuevoUsuario que es un objeto temporario que se va a ir alimentando\r\n//  con lo que el usuario ingresa en el imput, atravez de una funcion que se ejecuta cada vez que se cambia el input.\r\n// esa funcion captura el valor y quien es el input q se esta modificando, con esas dos variables \r\n// hace un setState y modifica el usuario temporario que estoy creando. \r\n// Cuando el usuario hace click en enviar eso dispara la funcion agregar invitado.\r\n//agarra el usuario temporario que fui creando y lo agrega al state del array invitados.\r\n//cuando se modifica el array invitados del state eso automaticamente \r\n// dispara que se pasen nuevas props al componente invitados.\r\n//Cuadno el componente Invitados recibe las nuevas props, q es una nueva lista de invitados, \r\n// compara con la lista que tiene.\r\n//A ver si cambia algun objeto, lo q cambia es que hay un nuevo objeto.\r\n//Esta capacidad de React de reaccionar a los cambios que es lo que se modifica sin intervenir \r\n// el resto del documento es pq trabaja con el virtual Dom(no lo ves, react lo va preparando y compara con el dom real y solo renderiza lo que cambia)\r\nconst Main = () => {\r\n    // Lo que esta en state se la paso a invitados\r\n // voy a crear un objeto que va a recibir los valores de los input\r\n    const [invitados, setInvitados] = useState([])\r\n    const [nuevoUsuario, setNuevoUsuario] = useState({})\r\n\r\n        //nuevoUsuario es un objeto temporario\r\n        // nuevoUsuario:{\r\n        //     nombre:'',\r\n        //     apellido: '',\r\n        //     url: '',\r\n        //     presente: false,\r\n        // }\r\n// En vez de tener una funcion para cada valor, hago todo en una funcion dinamica\r\n// cada vez q agrego un caracter se activa esta funcion.\r\n    const leerInput = e => {\r\n        // capturo el valor del input\r\n        var valor = e.target.value\r\n        // capturo la propiedad del input\r\n        var propiedad = e.target.name\r\n        // trabajo con el select del formulario\r\n        if (propiedad === 'sexo'){\r\n            const url = valor === 'H'\r\n            ? 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQS5x42unIdVraXOjld_z9f1mJHSvvS4QbqVA&usqp=CAU'\r\n            : 'https://lamenteesmaravillosa.com/wp-content/uploads/2015/10/mujer-mariposas.jpg'\r\n            propiedad = 'url'\r\n            valor = url\r\n        }\r\n        setNuevoUsuario({\r\n            ...nuevoUsuario,\r\n            // propiedad va entre corchetes pq es una propiedad dinamica\r\n            [propiedad]: valor\r\n        })\r\n    }\r\n    console.log(nuevoUsuario)\r\n// funcion que le paso a formulario\r\n    const agregarInvitado = e => {\r\n        if (nuevoUsuario.nombre === '' || nuevoUsuario.apellido === ''){\r\n                alert(\"Name or lastname can not be empty\")\r\n                //Si coloco el return no se sigue ejecutando la funcion. Como si pusiera un else\r\n                return false\r\n        }\r\n        // tomo el id del ultimo elemento con un ternario para cuando invitados este vacio\r\n        const nuevoId = invitados.length === 0 \r\n        ? 1 \r\n        : invitados[invitados.length-1].id + 1\r\n        console.log(e.target.id)\r\n        const usuarioACargar = {\r\n            ...nuevoUsuario,\r\n            id: nuevoId\r\n        }\r\n        \r\n            // lo que esta aca va a ser el codigo que va a agregar un nuevo invitado a state\r\n        setInvitados([\r\n        // ...this es el spread operator que llama a lo que ya tiene el array \r\n        \r\n            ...invitados,\r\n            usuarioACargar,\r\n        ])\r\n        // vuelvo a dejar el objeto nuevoUsuario nuevamente como en su origen\r\n        setNuevoUsuario({\r\n            nombre:'',\r\n            apellido: '',\r\n            url: '',\r\n            presente: false,\r\n        })\r\n    }\r\n\r\n    // esta funcion se la tengo q pasar al hijo invitados para que se la pueda pasar al nieto invitado\r\n    const borrarInvitado = e => {\r\n        // parseInt(parse es interpretar) transforma un string a numero o si hay otros caracteres\r\n        // que no son string toma solo el n° hasta q encuentra otro caracter q no sea n°\r\n        // le hago parseInt pq el id es un string \r\n        const idABorrar = parseInt(e.target.id)\r\n        // modifico el state con un filter, para iterar invitados y retornar en el array solo los \r\n        // que sean != al id q quiero borrar\r\n        setInvitados(\r\n            invitados.filter(invitados => invitados.id !== idABorrar)\r\n        )\r\n// Cuando se actualiza el estado va a eliminar del array invitados el que yo borre,\r\n//el componente se vuelve a renderizar y a invitados le va a pasar una nueva prop con la \r\n// nueva lista de invitados. Invitados la va a recibir va a comparar el virtual con el local dom y va\r\n// a detectar que determinado elemento ya no existe pq lo borre entonces el componente invitados actualiza el dom\r\n//borrando a ese objeto.   \r\n    }\r\n\r\n    const asistioInvitado = e => {\r\n        const idAModificar = parseInt(e.target.id)\r\n        const copiaInvitados = [...invitados]\r\n        copiaInvitados.map(invitado => {\r\n            if(invitado.id === idAModificar) {\r\n                invitado.vino = true\r\n            }\r\n        })\r\n        setInvitados(\r\n            copiaInvitados      \r\n        )\r\n    }\r\n\r\n        console.log(nuevoUsuario)\r\n        return (\r\n            <>\r\n            <div id=\"mainContainer\">\r\n                {/* le paso los invitados que saco de estado o state */}\r\n                <Invitados invitados={invitados} \r\n                asistioInvitado={asistioInvitado} borrarInvitado={borrarInvitado} />\r\n                {/* formulario recibe la funcion por props */}\r\n                <Formulario agregarInvitado={agregarInvitado}\r\n                //Le envio la prop nuevoUsuario al formulario(Bindeando o hacer un \"two ways binding\" o en criollo \"limpiar campos de un input\")\r\n                //lo recibe el componente formulario  \r\n                leerInput={leerInput} nuevoUsuario={nuevoUsuario}/>\r\n                \r\n            </div>\r\n            {/* Link es un elemento de react router dom y si yo inspecciono el codigo me figura el boton dentro de \r\n            una etiqueta <a>, funciona como en enlace por lo que no es necesario un boton */}\r\n            <Link to='/historia'>\r\n                <button>Ir a historia</button>\r\n            </Link>\r\n            <Link to='/principal'>\r\n                <button>Ir a principal</button>\r\n            </Link>\r\n\r\n            </>\r\n\r\n        )\r\n}\r\nexport default Main\r\n","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Formulario.js",[],"C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Invitados.js",[],"C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Invitado.js",[],"C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Menu.js",["52"],"import React from 'react'\r\n// NavLink tiene una sutil diferencia, me permite de forma mas facil saber en q pagina estoy\r\n// toma una clase active en la pagina en la q estoy(sirve en menus para dejar en gris las pag en las q no estoy)\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Menu = () => {\r\n    return (\r\n        <div id='mainContainer'>\r\n            <Link to='/historia'>\r\n                <button>Ir a historia</button>\r\n            </Link>\r\n            <Link to='/principal'>\r\n                <button>Ir a principal</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\Historia.js",[],"C:\\Users\\Nicolas\\Desktop\\ESCRITORIO\\MindHub\\NodeJs\\fiesta\\mifiesta\\frontend\\src\\component\\HistoriaAntigua.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":110,"column":37,"nodeType":"59","messageId":"60","endLine":110,"endColumn":39},{"ruleId":"61","severity":1,"message":"62","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":17},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]